---
- name: Add the br_netfilter module
  community.general.modprobe:
    name: br_netfilter
    state: present

- name: Install CNI Plugins (amd64)
  ansible.builtin.shell: curl -L -o cni-plugins.tgz https://github.com/containernetworking/plugins/releases/download/v1.5.0/cni-plugins-linux-amd64-v1.5.0.tgz &&  mkdir -p /opt/cni/bin && tar -C /opt/cni/bin -xzf cni-plugins.tgz
  when: ansible_architecture == "x86_64"

- name: Install CNI Plugins (arm64)
  ansible.builtin.shell: curl -L -o cni-plugins.tgz https://github.com/containernetworking/plugins/releases/download/v1.5.0/cni-plugins-linux-arm64-v1.5.0.tgz &&  mkdir -p /opt/cni/bin && tar -C /opt/cni/bin -xzf cni-plugins.tgz
  when: ansible_architecture == "aarch64"

- name: Install Consul-CNI Plugin (amd64)
  ansible.builtin.shell: curl -L -o consul-cni.zip https://releases.hashicorp.com/consul-cni/1.5.0/consul-cni_1.5.0_linux_amd64.zip && unzip -o consul-cni.zip -d /opt/cni/bin -x LICENSE.txt
  when: ansible_architecture == "x86_64"

- name: Install Consul-CNI Plugin (arm64)
  ansible.builtin.shell: curl -L -o consul-cni.zip https://releases.hashicorp.com/consul-cni/1.5.0/consul-cni_1.5.0_linux_arm64.zip && unzip -o consul-cni.zip -d /opt/cni/bin -x LICENSE.txt
  when: ansible_architecture == "aarch64"

- name: Configure bridge network
  ansible.builtin.shell: echo 1 | tee /proc/sys/net/bridge/bridge-nf-call-arptables && echo 1 | tee /proc/sys/net/bridge/bridge-nf-call-ip6tables && echo 1 | tee /proc/sys/net/bridge/bridge-nf-call-iptables

- name: Sync CNI Configs
  ansible.posix.synchronize:
    src: ../cni/
    dest: /opt/cni/config/